# syntax=docker/dockerfile:1

ARG NODE_VERSION=20.12.1

FROM node:${NODE_VERSION}-alpine

ENV NODE_ENV production


WORKDIR /usr/src/app

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.npm to speed up subsequent builds.
# Leverage a bind mounts to package.json and package-lock.json to avoid having to copy them into
# into this layer.
RUN --mount=type=bind,source=nodejs/package.json,target=package.json \
    --mount=type=bind,source=nodejs/package-lock.json,target=package-lock.json \
    --mount=type=cache,target=/root/.npm \
    npm ci --omit=dev

# Run the application as a non-root user.
USER node

# Copy the rest of the source files into the image.
COPY ./nodejs/ .

# Run the application.
CMD node src/server.js

HEALTHCHECK --start-period=30s --start-interval=1s --interval=30s --timeout=2s --retries=5 \
  CMD wget --no-verbose --tries=1 --spider  http://localhost:3000/task2 || exit 1